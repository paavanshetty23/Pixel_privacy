import React, { useState } from 'react';

function SingleSearch() {
  const [name, setName] = useState('');
  const [piiType, setPiiType] = useState('');
  const [piiValue, setPiiValue] = useState('');
  const [websites, setWebsites] = useState([]);
  const [searchResults, setSearchResults] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  const [searchAttempted, setSearchAttempted] = useState(false);

  const handlePiiValueChange = (e) => {
    setPiiValue(e.target.value);
  };

  const handleSearch = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    setSearchAttempted(true);
    
    try {
      const response = await fetch('/api/search_pii', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          piiType: piiType,
          piiValue: piiValue,
          name: name
        }),
      });

      if (response.ok) {
        const data = await response.json();
        setSearchResults(data);
        // Extract websites from neighbors for backward compatibility
        if (data.neighbors) {
          const extractedWebsites = data.neighbors.map(item => item.website);
          setWebsites(extractedWebsites);
        } else {
          setWebsites([]);
        }
      } else {
        console.error('Search failed');
        setWebsites([]);
        setSearchResults(null);
      }
    } catch (error) {
      console.error('Error:', error);
      setWebsites([]);
      setSearchResults(null);
    } finally {
      setIsLoading(false);
    }
  };
  return (
    <div className="container-fluid">
      <div className="row">
        <div className="col-md-8 mx-auto">
          <div className="card bg-dark border-light mb-4">
            <div className="card-header bg-dark border-light">
              <h4 className="text-white mb-0">
                <i className="bi bi-person-badge me-2"></i>
                PII Exposure Search
              </h4>
              <small className="text-white-50">Check if your personal information is exposed on the internet</small>
            </div>
            <div className="card-body">
              <form onSubmit={handleSearch}>
                <div className="row g-3">
                  <div className="col-12">
                    <label className="form-label text-white">
                      <i className="bi bi-person me-2"></i>
                      Your Name
                    </label>
                    <input
                      type="text"
                      className="form-control bg-dark text-white border-light"
                      value={name}
                      onChange={e => setName(e.target.value)}
                      placeholder="Enter your name"
                      required
                    />
                  </div>
                  
                  <div className="col-md-6">
                    <label className="form-label text-white">
                      <i className="bi bi-shield-exclamation me-2"></i>
                      Type of PII
                    </label>
                    <select
                      className="form-select bg-dark text-white border-light"
                      value={piiType}
                      onChange={e => {
                        setPiiType(e.target.value);
                        setPiiValue(''); // Reset PII value when type changes
                      }}
                      required
                    >
                      <option value="">Select PII Type</option>
                      <option value="AADHAR">ðŸ†” Aadhar</option>
                      <option value="PAN">ðŸ“„ PAN</option>
                      <option value="PASSPORT">ðŸ›‚ Passport</option>
                    </select>
                  </div>
                  
                  <div className="col-md-6">
                    <label className="form-label text-white">
                      <i className="bi bi-key me-2"></i>
                      {piiType || 'PII Value'}
                    </label>
                    <input
                      type="text"
                      className="form-control bg-dark text-white border-light"
                      value={piiValue}
                      onChange={handlePiiValueChange}
                      placeholder={
                        piiType === 'AADHAR' ? 'Enter Aadhar Number (e.g., 1234 5678 9012)' :
                        piiType === 'PAN' ? 'Enter PAN Number (e.g., ABCDE1234F)' :
                        piiType === 'PASSPORT' ? 'Enter Passport ID (e.g., A-1234567)' :
                        'Enter PII value'
                      }
                      pattern={
                        piiType === 'AADHAR' ? '\\d{4}\\s\\d{4}\\s\\d{4}' :
                        piiType === 'PAN' ? '[A-Z]{5}[0-9]{4}[A-Z]{1}' :
                        piiType === 'PASSPORT' ? '[A-Z]{1}-?\\d{7}' :
                        null
                      }
                      required
                    />
                  </div>
                </div>
                
                <div className="d-grid gap-2 mt-4">
                  <button 
                    type="submit" 
                    disabled={isLoading} 
                    className="btn btn-outline-light btn-lg"
                  >
                    {isLoading ? (
                      <>
                        <span className="spinner-border spinner-border-sm me-2" role="status"></span>
                        Searching...
                      </>
                    ) : (
                      <>
                        <i className="bi bi-search me-2"></i>
                        Search for Exposure
                      </>
                    )}
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>      {/* Search Results */}
      {searchAttempted && (
        <div className="row">
          <div className="col-md-10 mx-auto">
            {websites.length > 0 ? (
              <div className="alert alert-warning border-light">
                <h5 className="alert-heading">
                  <i className="bi bi-exclamation-triangle me-2"></i>
                  Exposed Websites Found
                </h5>
                <ul className="list-unstyled mb-0">
                  {websites.map((site, idx) => (
                    <li key={idx} className="mb-1">
                      <i className="bi bi-link-45deg me-2"></i>
                      <a href={site} target="_blank" rel="noopener noreferrer" className="text-dark">
                        {site}
                      </a>
                    </li>
                  ))}
                </ul>
              </div>
            ) : (
              <div className="alert alert-success border-light">
                <h5 className="alert-heading">
                  <i className="bi bi-check-circle me-2"></i>
                  Good News!
                </h5>
                <p className="mb-0">No exposed websites found for this query. Your data appears to be safe.</p>
              </div>
            )}
          </div>
        </div>
      )}
        
      {/* Detailed Search Results */}
      {searchResults && (
        <div className="row">
          <div className="col-md-10 mx-auto">
            <div className="card bg-dark border-light">
              <div className="card-header bg-dark border-light">
                <h4 className="text-white mb-0">
                  <i className="bi bi-clipboard-data me-2"></i>
                  Search Results
                </h4>
              </div>
              <div className="card-body">"
                <div className="row mb-3">
                  <div className="col-md-6">
                    <strong className="text-white">Searched for:</strong>
                    <span className="badge bg-primary ms-2">{searchResults.query}</span>
                  </div>
                  <div className="col-md-6">
                    <strong className="text-white">Name:</strong>
                    <span className="badge bg-secondary ms-2">{name}</span>
                  </div>
                </div>
          
          {searchResults.neighbors && searchResults.neighbors.length > 0 ? (
            <div className="results-container">
              <div className="results-summary">
                <div className="summary-text">
                  <h4>Found {searchResults.neighbors.length} exposed {searchResults.neighbors.length === 1 ? 'instance' : 'instances'}</h4>
                  <p className="summary-description">
                    We detected your personal information on {new Set(searchResults.neighbors.map(item => item.website)).size} {new Set(searchResults.neighbors.map(item => item.website)).size === 1 ? 'website' : 'websites'}
                  </p>
                </div>
                <RiskIndicator count={searchResults.neighbors.length} />
              </div>
              
              {searchResults.neighbors.map((item, idx) => (
                <div key={idx} className="result-card">
                  <div className="result-header">
                    <span className={`pii-badge ${item.pii_type ? item.pii_type.toLowerCase() : 'unknown'}`}>
                      {item.pii_type || 'Unknown'}
                    </span>
                    <span className="result-score">
                      Match Score: <strong>{item.distance ? ((1 - item.distance) * 100).toFixed(2) : 'N/A'}%</strong>
                    </span>
                  </div>
                  <div className="result-body">
                    <p>
                      <strong>Data Found:</strong> 
                      <span className="highlight-data">{item.data || 'N/A'}</span>
                    </p>
                    <p>
                      <strong>Website:</strong> 
                      <a 
                        href={item.website && item.website.startsWith('http') ? item.website : `https://${item.website || ''}`} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        className="website-link"
                      >
                        {item.website || 'Unknown'}
                      </a>
                    </p>
                    <p>
                      <strong>Detected On:</strong> 
                      <span className="timestamp">
                        {item.timestamp ? new Date(item.timestamp).toLocaleDateString('en-US', { 
                          year: 'numeric', 
                          month: 'long', 
                          day: 'numeric',
                          hour: '2-digit',
                          minute: '2-digit'
                        }) : 'Unknown'}
                      </span>
                    </p>
                  </div>
                </div>
              ))}
              
              <div className="action-steps">
                <h4>Recommended Actions</h4>
                <ul>
                  <li>Contact the website administrators to request data removal</li>
                  <li>Consider updating your credentials if they have been exposed</li>
                  <li>Monitor your accounts for suspicious activities</li>
                  <li>Enable two-factor authentication where possible</li>
                </ul>
              </div>
            </div>
          ) : (
            <div className="no-results">
              <div className="no-results-icon">âœ“</div>
              <h4>Great news! No exposed PII found.</h4>
              <p>Your personal information appears to be safe. Continue to monitor regularly.</p>
            </div>
          )}
        </div>
      )}
    </div>
  );
}

// Helper component to display the exposure risk level based on match count
function RiskIndicator({ count }) {
  let riskLevel = "Low";
  let riskColor = "#40c057";
  let riskMessage = "Your exposure risk is minimal.";
  let riskIcon = "âœ“";
  
  if (count === 0) {
    riskLevel = "None";
    riskMessage = "No exposure detected.";
  } else if (count > 0 && count <= 2) {
    riskLevel = "Moderate";
    riskColor = "#fd7e14";
    riskMessage = "Your information has limited exposure.";
    riskIcon = "âš ";
  } else if (count > 2) {
    riskLevel = "High";
    riskColor = "#e03131";
    riskMessage = "Your information has significant exposure!";
    riskIcon = "âš âš ";
  }
  
  // Calculate a percentage for the risk meter
  const riskPercentage = count === 0 ? 0 : count <= 2 ? 50 : 100;
  
  return (
    <div className="risk-indicator">
      <h4>Exposure Risk Level</h4>
      <div className="risk-meter-container">
        <div 
          className="risk-meter" 
          style={{ width: `${riskPercentage}%`, backgroundColor: riskColor }}
        ></div>
      </div>
      <div className="risk-details">
        <div className={`risk-level ${riskLevel.toLowerCase()}`} style={{ backgroundColor: riskColor }}>
          <span className="risk-icon">{riskIcon}</span>
          {riskLevel}
        </div>
        <p className="risk-message">{riskMessage}</p>
      </div>
    </div>
  );
}

export default SingleSearch;
